# Проект управления клиентами

Этот проект представляет собой систему управления клиентами, которая позволяет пользователям добавлять, редактировать, удалять и просматривать информацию о клиентах. Проект построен с использованием Spring Boot для серверной части и jQuery для взаимодействия с клиентом на стороне клиента.

## Основные возможности

- Добавление нового клиента с уникальным номером договора.
- Просмотр списка клиентов с их информацией.
- Редактирование данных клиента, включая изменение имени, номера договора и закрепленного менеджера.
- Удаление клиента из системы.
- Обработка ошибок, таких как дублирование номера договора.

## Стек технологий

- **Back-end**: Spring Boot, Spring Data JPA
- **Front-end**: HTML, CSS, jQuery, Bootstrap
- **База данных**: H2 (встроенная для разработки), PostgreSQL (для продакшена)

## Установка и запуск

### Требования

- Java 11 или выше
- Maven
- PostgreSQL (если используется в продакшене)

### Шаги установки

1. **Клонирование репозитория:**

    ```bash
    git clone https://github.com/yourusername/client-management-system.git
    cd client-management-system
    ```

2. **Настройка базы данных:**

    - Если используется PostgreSQL, настройте `application.properties`:

    ```properties
    spring.datasource.url=jdbc:postgresql://localhost:5432/yourdatabase
    spring.datasource.username=yourusername
    spring.datasource.password=yourpassword
    spring.jpa.hibernate.ddl-auto=update
    spring.datasource.driver-class-name=org.postgresql.Driver
    ```

3. **Запуск приложения:**

    ```bash
    mvn spring-boot:run
    ```

4. **Открытие в браузере:**

    Перейдите по адресу `http://localhost:8080` для доступа к приложению.

## Структура проекта

- `src/main/java/com/example/clientmanagement`: Основной пакет с классами Spring Boot.
  - `controller`: Классы контроллеров для обработки HTTP-запросов.
  - `model`: Классы сущностей JPA.
  - `repository`: Интерфейсы репозиториев для взаимодействия с базой данных.
  - `service`: Классы сервисов с бизнес-логикой.
- `src/main/resources`: Ресурсы проекта.
  - `application.properties`: Файл конфигурации приложения.
- `src/main/resources/static`: Статические ресурсы, включая HTML, CSS и JavaScript файлы.

## Примеры использования

### Добавление нового клиента

1. Откройте форму добавления клиента.
2. Введите имя клиента, номер договора и закрепленного менеджера.
3. Нажмите "Сохранить". Новый клиент появится в списке клиентов.

### Редактирование клиента

1. Нажмите на ссылку "Редактировать" рядом с клиентом.
2. В открывшейся форме внесите изменения в данные клиента.
3. Нажмите "Сохранить изменения". Изменения отобразятся в списке клиентов.

### Удаление клиента

1. Нажмите на ссылку "Удалить" рядом с клиентом.
2. Подтвердите удаление во всплывающем окне. Клиент будет удален из списка.

## Обработка ошибок

- Если номер договора уже существует, при попытке добавления или редактирования клиента будет отображено сообщение об ошибке.
- Если клиент не найден, при попытке редактирования или удаления будет отображено соответствующее сообщение.



